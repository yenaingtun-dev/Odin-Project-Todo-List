/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const form = document.querySelector(\"#form\");\nconst todoInput = document.querySelector(\"#todo\");\nconst todoDescription = document.querySelector(\"#description\");\nconst todoUrgent = document.querySelector(\"#urgent\");\nconst todoNotUrgent = document.querySelector(\"#notUrgent\");\n// const todoDueDate = document.querySelector(\"#dueDate\");\nconst todoList = document.querySelector(\".tasks\");\nconst formModal = document.querySelector(\"#formModal\");\nconst formBackground = document.querySelector(\"#formBackground\");\nconst todoDivClass = [\n    \"todo\",\n    \"flex\",\n    \"justify-between\",\n    \"space-x-3\",\n    \"bg-white\",\n    \"rounded-lg\",\n    \"px-3\",\n    \"py-3\",\n    \"mb-2\",\n];\nconst completedButtonClass = [\n    \"complete-btn\",\n    \"bg-[#BDE0FE]\",\n    \"px-2\",\n    \"py-1\",\n    \"mr-1\",\n    \"rounded-lg\",\n    \"hover:text-white\",\n    \"hover:bg-[#A2D2FF]\",\n    \"text-xs\",\n];\nconst trashButtonClass = [\n    \"trash-btn\",\n    \"bg-[#FFC8DD]\",\n    \"px-2\",\n    \"py-1\",\n    \"rounded-lg\",\n    \"hover:text-white\",\n    \"hover:bg-[#FFAFCC]\",\n    \"text-xs\",\n];\n\ndocument.addEventListener(\"DOMContentLoaded\", getTodos);\nform.addEventListener(\"submit\", addTodo);\n\n// validation the input\nfunction validate(task) {\n    if (task !== \"\") {\n        console.log(\"herer\");\n        return true;\n    } else {\n        if (task.value === \"\") {\n            alert(\"u need to add todo\");\n            return false;\n        }\n        //  else if (date.value === \"\") {\n        //     alert(\"u need to add due date\");\n        //     return false;\n        // }\n        else {\n            alert(\"u need to fill form\");\n            return false;\n        }\n    }\n}\n\nfunction addTodo(e) {\n    e.preventDefault();\n    if (validate(todoInput.value)) {\n        const todoDiv = document.createElement(\"div\");\n        const textDiv = document.createElement(\"div\");\n        const newTodo = document.createElement(\"li\");\n        const newTodoDescription = document.createElement(\"p\");\n        // const newTodoDueDate = document.createElement(\"p\");\n        const btnDiv = document.createElement(\"div\");\n        const completedButton = document.createElement(\"button\");\n        const trashButton = document.createElement(\"button\");\n        const newTodoId = Math.random().toString(16).slice(2);\n        let isCompleted = false;\n        todoDiv.classList.add(...todoDivClass);\n        if (todoNotUrgent.checked) {\n            newTodo.classList.add(\n                \"todo-item\",\n                \"w-[20rem]\",\n                \"font-semibold\",\n                \"uppercase\"\n            );\n        } else {\n            newTodo.classList.add(\n                \"todo-item\",\n                \"text-red-300\",\n                \"w-[20rem]\",\n                \"font-semibold\",\n                \"uppercase\"\n            );\n        }\n        newTodoDescription.classList.add(\"text-xs\", \"my-1\", \"sm:w-80\");\n        // newTodoDueDate.classList.add(\"text-xs\", \"underline\");\n        newTodo.innerText = todoInput.value;\n        newTodoDescription.innerHTML = todoDescription.value;\n        // newTodoDueDate.innerHTML = todoDueDate.value;\n        textDiv.appendChild(newTodo);\n        textDiv.appendChild(newTodoDescription);\n        // textDiv.appendChild(newTodoDueDate);\n        todoDiv.append(textDiv);\n        newTodo.addEventListener(\"dblclick\", (e) => {\n            const editTodo = prompt(\"edit todo\", newTodo.innerHTML);\n            if (editTodo !== null && editTodo !== \"\") {\n                newTodo.innerHTML = editTodo;\n            }\n        });\n        todoInput.value = \"\";\n        todoDescription.value = \"\";\n        // todoDueDate.value = \"\";\n        // complete button\n        completedButton.innerHTML = `complete`;\n        completedButton.classList.add(...completedButtonClass);\n        btnDiv.appendChild(completedButton);\n        completedButton.addEventListener(\"click\", (e) => {\n            if (isCompleted !== false) {\n                newTodo.style.textDecoration = \"none\";\n                todoDiv.style.backgroundColor = \"white\";\n                completedButton.innerHTML = \"complete\";\n                removeTodo(e);\n                isCompleted = false;\n                saveLocalTodos({\n                    id: newTodoId,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: false,\n                });\n                // console.log(\"false\");\n            } else {\n                newTodo.style.textDecoration = \"line-through\";\n                todoDiv.style.backgroundColor = \"#CDB4DB\";\n                completedButton.innerHTML = \"completed\";\n                removeTodo(e);\n                isCompleted = true;\n                saveLocalTodos({\n                    id: newTodoId,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: true,\n                });\n                // console.log(\"true\");\n            }\n        });\n        //trash button\n        trashButton.innerHTML = `delete`;\n        trashButton.classList.add(...trashButtonClass);\n        btnDiv.appendChild(trashButton);\n        trashButton.addEventListener(\"click\", (e) => {\n            if (confirm(\"Delete a todo!\") == true) {\n                removeTodo(e);\n            }\n        });\n        todoDiv.append(btnDiv);\n        //attach final Todo\n        todoList.appendChild(todoDiv);\n        formModal.style.display = \"none\";\n        formBackground.style.display = \"none\";\n        saveLocalTodos({\n            id: newTodoId,\n            title: newTodo.innerHTML,\n            description: newTodoDescription.innerHTML,\n            // duedate: newTodoDueDate.innerHTML,\n            notUrgent: todoNotUrgent.checked,\n            urgent: todoUrgent.checked,\n            completed: isCompleted,\n        });\n    } else {\n        console.error(\"fill the form!\");\n    }\n}\n\nfunction getTodos() {\n    let todos;\n    if (localStorage.getItem(\"todos\") === null) {\n        todos = [];\n    } else {\n        todos = JSON.parse(localStorage.getItem(\"todos\"));\n    }\n    todos.forEach(function (todo) {\n        const todoDiv = document.createElement(\"div\");\n        todoDiv.classList.add(...todoDivClass);\n        const textDiv = document.createElement(\"div\");\n        const newTodo = document.createElement(\"li\");\n        if (todo.notUrgent) {\n            newTodo.classList.add(\n                \"todo-item\",\n                \"w-28\",\n                \"font-semibold\",\n                \"uppercase\"\n            );\n        } else {\n            newTodo.classList.add(\n                \"todo-item\",\n                \"text-red-300\",\n                \"w-28\",\n                \"font-semibold\",\n                \"uppercase\"\n            );\n        }\n        const newTodoDescription = document.createElement(\"p\");\n        newTodoDescription.classList.add(\"text-xs\", \"my-1\", \"sm:w-80\");\n        // const newTodoDueDate = document.createElement(\"p\");\n        // newTodoDueDate.classList.add(\"text-xs\", \"underline\");\n        newTodo.innerText = todo.title;\n        newTodoDescription.innerHTML = todo.description;\n        // newTodoDueDate.innerHTML = todo.duedate;\n        textDiv.appendChild(newTodo);\n        textDiv.appendChild(newTodoDescription);\n        // textDiv.appendChild(newTodoDueDate);\n        todoDiv.append(textDiv);\n        newTodo.addEventListener(\"dblclick\", (e) => {\n            const editTodo = prompt(\"edit todo\", newTodo.innerHTML);\n            if (editTodo !== null && editTodo !== \"\") {\n                removeTodo(e);\n                newTodo.innerHTML = editTodo;\n                saveLocalTodos({\n                    id: todo.id,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: false,\n                });\n            }\n        });\n        newTodoDescription.addEventListener(\"dblclick\", (e) => {\n            const editTodoDescription = prompt(\n                \"edit todo description\",\n                newTodoDescription.innerHTML\n            );\n            if (editTodoDescription !== null && editTodoDescription !== \"\") {\n                removeTodo(e);\n                newTodoDescription.innerHTML = editTodoDescription;\n                saveLocalTodos({\n                    id: todo.id,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: false,\n                });\n            }\n        });\n        // complete button\n        const btnDiv = document.createElement(\"div\");\n        const completedButton = document.createElement(\"button\");\n        completedButton.innerHTML = `complete`;\n        completedButton.classList.add(...completedButtonClass);\n        btnDiv.appendChild(completedButton);\n        if (todo.completed) {\n            newTodo.style.textDecoration = \"line-through\";\n            todoDiv.style.backgroundColor = \"#CDB4DB\";\n            completedButton.innerHTML = \"completed\";\n        }\n        completedButton.addEventListener(\"click\", (e) => {\n            if (newTodo.style.textDecoration == \"line-through\") {\n                newTodo.style.textDecoration = \"none\";\n                todoDiv.style.backgroundColor = \"white\";\n                completedButton.innerHTML = \"complete\";\n                removeTodo(e, todo.id);\n                saveLocalTodos({\n                    id: todo.id,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: false,\n                });\n            } else {\n                newTodo.style.textDecoration = \"line-through\";\n                todoDiv.style.backgroundColor = \"#CDB4DB\";\n                completedButton.innerHTML = \"completed\";\n                removeTodo(e, todo.id);\n                saveLocalTodos({\n                    id: todo.id,\n                    title: newTodo.innerHTML,\n                    description: newTodoDescription.innerHTML,\n                    // duedate: newTodoDueDate.innerHTML,\n                    notUrgent: todoNotUrgent.checked,\n                    urgent: todoUrgent.checked,\n                    completed: true,\n                });\n            }\n        });\n        //trash button\n        const trashButton = document.createElement(\"button\");\n        trashButton.innerHTML = `delete`;\n        trashButton.classList.add(...trashButtonClass);\n        btnDiv.appendChild(trashButton);\n        trashButton.addEventListener(\"click\", (e) => {\n            if (confirm(\"Delete a todo!\") == true) {\n                removeTodo(e);\n            }\n        });\n        todoDiv.append(btnDiv);\n        todoList.appendChild(todoDiv);\n    });\n}\n\n// save local todo\nfunction saveLocalTodos(todo) {\n    let todos;\n    if (localStorage.getItem(\"todos\") === null) {\n        todos = [];\n    } else {\n        todos = JSON.parse(localStorage.getItem(\"todos\"));\n    }\n    todos.push(todo);\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    // console.log(todos);\n}\n\n// remove todo\nfunction removeTodo(e, todoId) {\n    const item = e.target;\n    if (item.classList[0] === \"trash-btn\") {\n        // console.log(\"trash\");\n        const todo = item.parentElement.parentElement;\n        removeLocalTodos(todo);\n        todo.remove();\n    }\n    if (item.classList[0] === \"complete-btn\") {\n        // console.log(\"complete\");\n        const todo = item.parentElement.parentElement;\n        // console.log(todo.children[0].children[0].innerHTML);\n        const todoName = todo.children[0].children[0].innerHTML;\n        todo.classList.toggle(\"completed\");\n        removeLocalTodos(todo, todoId, todoName);\n    }\n}\n\n// remove local save todos\nfunction removeLocalTodos(todo, todoId, todoName) {\n    let todos;\n    if (localStorage.getItem(\"todos\") === null) {\n        todos = [];\n    } else {\n        todos = JSON.parse(localStorage.getItem(\"todos\"));\n    }\n    if (!todoName) {\n        todoName = todo.children[0].children[0].innerHTML;\n    }\n    // const todoIndex = todo.children[0].innerText;\n    // const todoIndex = todo.children[0].getElementsByTagName('li')[0].innerHTML;\n    // todos.splice(todos.indexOf(todoIndex), 1);\n    if (todoName) {\n        for (let i = 0; i < todos.length; i++) {\n            if (todos[i].title === todoName) {\n                todos.splice(i, 1);\n            }\n        }\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n    // todos.splice(todos.indexOf(todoId), 1);\n}\n\n\n//# sourceURL=webpack://13.odin-project-todo-list/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;